/* eslint-disable */
//@ts-nocheck
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

//var google_api_annotations_pb = require('./google/api/annotations_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
//var protoc$gen$swagger_options_annotations_pb = require('./protoc-gen-swagger/options/annotations_pb.js');
goog.exportSymbol('proto.n0stack.provisioning.v0.BootVirtualMachineRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.CreateVirtualMachineRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.GetVirtualMachineRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.ListVirtualMachinesRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.ListVirtualMachinesResponse', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.OpenConsoleRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.OpenConsoleResponse', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.RebootVirtualMachineRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.SaveVirtualMachineRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.VirtualMachine', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.VirtualMachine.VirtualMachineState', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.VirtualMachineNIC', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.VirtualMachineNIC = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.VirtualMachineNIC, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.VirtualMachineNIC.displayName = 'proto.n0stack.provisioning.v0.VirtualMachineNIC';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.VirtualMachineNIC.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.VirtualMachineNIC.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.VirtualMachineNIC} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.VirtualMachineNIC.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    hardwareAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ipv4Address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ipv6Address: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.VirtualMachineNIC}
 */
proto.n0stack.provisioning.v0.VirtualMachineNIC.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.VirtualMachineNIC;
  return proto.n0stack.provisioning.v0.VirtualMachineNIC.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.VirtualMachineNIC} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.VirtualMachineNIC}
 */
proto.n0stack.provisioning.v0.VirtualMachineNIC.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkName(value);
      break;
    case 5:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHardwareAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpv4Address(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpv6Address(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.VirtualMachineNIC.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.VirtualMachineNIC.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.VirtualMachineNIC} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.VirtualMachineNIC.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getHardwareAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIpv4Address();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIpv6Address();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string network_name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualMachineNIC.prototype.getNetworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualMachineNIC.prototype.setNetworkName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> annotations = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.VirtualMachineNIC.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.VirtualMachineNIC.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


/**
 * optional string hardware_address = 2;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualMachineNIC.prototype.getHardwareAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualMachineNIC.prototype.setHardwareAddress = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ipv4_address = 3;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualMachineNIC.prototype.getIpv4Address = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualMachineNIC.prototype.setIpv4Address = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ipv6_address = 4;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualMachineNIC.prototype.getIpv6Address = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualMachineNIC.prototype.setIpv6Address = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.VirtualMachine = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.provisioning.v0.VirtualMachine.repeatedFields_, null);
};
goog.inherits(proto.n0stack.provisioning.v0.VirtualMachine, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.VirtualMachine.displayName = 'proto.n0stack.provisioning.v0.VirtualMachine';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.provisioning.v0.VirtualMachine.repeatedFields_ = [14,15,18,54];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.VirtualMachine.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.VirtualMachine} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.VirtualMachine.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    requestCpuMilliCore: jspb.Message.getFieldWithDefault(msg, 10, 0),
    limitCpuMilliCore: jspb.Message.getFieldWithDefault(msg, 11, 0),
    requestMemoryBytes: jspb.Message.getFieldWithDefault(msg, 12, 0),
    limitMemoryBytes: jspb.Message.getFieldWithDefault(msg, 13, 0),
    blockStorageNamesList: jspb.Message.getRepeatedField(msg, 14),
    nicsList: jspb.Message.toObjectList(msg.getNicsList(),
    proto.n0stack.provisioning.v0.VirtualMachineNIC.toObject, includeInstance),
    uuid: jspb.Message.getFieldWithDefault(msg, 16, ""),
    loginUsername: jspb.Message.getFieldWithDefault(msg, 17, ""),
    sshAuthorizedKeysList: jspb.Message.getRepeatedField(msg, 18),
    state: jspb.Message.getFieldWithDefault(msg, 50, 0),
    computeNodeName: jspb.Message.getFieldWithDefault(msg, 52, ""),
    computeName: jspb.Message.getFieldWithDefault(msg, 53, ""),
    networkInterfaceNamesList: jspb.Message.getRepeatedField(msg, 54)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.VirtualMachine}
 */
proto.n0stack.provisioning.v0.VirtualMachine.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.VirtualMachine;
  return proto.n0stack.provisioning.v0.VirtualMachine.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.VirtualMachine} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.VirtualMachine}
 */
proto.n0stack.provisioning.v0.VirtualMachine.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 4:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequestCpuMilliCore(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimitCpuMilliCore(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestMemoryBytes(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimitMemoryBytes(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addBlockStorageNames(value);
      break;
    case 15:
      var value = new proto.n0stack.provisioning.v0.VirtualMachineNIC;
      reader.readMessage(value,proto.n0stack.provisioning.v0.VirtualMachineNIC.deserializeBinaryFromReader);
      msg.addNics(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginUsername(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addSshAuthorizedKeys(value);
      break;
    case 50:
      var value = /** @type {!proto.n0stack.provisioning.v0.VirtualMachine.VirtualMachineState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setComputeNodeName(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.setComputeName(value);
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.addNetworkInterfaceNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.VirtualMachine.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.VirtualMachine} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.VirtualMachine.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRequestCpuMilliCore();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getLimitCpuMilliCore();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getRequestMemoryBytes();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getLimitMemoryBytes();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getBlockStorageNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getNicsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.n0stack.provisioning.v0.VirtualMachineNIC.serializeBinaryToWriter
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getLoginUsername();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getSshAuthorizedKeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      50,
      f
    );
  }
  f = message.getComputeNodeName();
  if (f.length > 0) {
    writer.writeString(
      52,
      f
    );
  }
  f = message.getComputeName();
  if (f.length > 0) {
    writer.writeString(
      53,
      f
    );
  }
  f = message.getNetworkInterfaceNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      54,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.n0stack.provisioning.v0.VirtualMachine.VirtualMachineState = {
  VIRTUAL_MACHINE_UNSPECIFIED: 0,
  PENDING: 1,
  RUNNING: 2,
  SHUTDOWN: 3,
  PAUSED: 4
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> annotations = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.VirtualMachine.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


/**
 * map<string, string> labels = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.VirtualMachine.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
};


/**
 * optional uint32 request_cpu_milli_core = 10;
 * @return {number}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getRequestCpuMilliCore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setRequestCpuMilliCore = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 limit_cpu_milli_core = 11;
 * @return {number}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getLimitCpuMilliCore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setLimitCpuMilliCore = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 request_memory_bytes = 12;
 * @return {number}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getRequestMemoryBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setRequestMemoryBytes = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint64 limit_memory_bytes = 13;
 * @return {number}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getLimitMemoryBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setLimitMemoryBytes = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * repeated string block_storage_names = 14;
 * @return {!Array<string>}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getBlockStorageNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/** @param {!Array<string>} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setBlockStorageNamesList = function(value) {
  jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.addBlockStorageNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


proto.n0stack.provisioning.v0.VirtualMachine.prototype.clearBlockStorageNamesList = function() {
  this.setBlockStorageNamesList([]);
};


/**
 * repeated VirtualMachineNIC nics = 15;
 * @return {!Array<!proto.n0stack.provisioning.v0.VirtualMachineNIC>}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getNicsList = function() {
  return /** @type{!Array<!proto.n0stack.provisioning.v0.VirtualMachineNIC>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.n0stack.provisioning.v0.VirtualMachineNIC, 15));
};


/** @param {!Array<!proto.n0stack.provisioning.v0.VirtualMachineNIC>} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setNicsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.n0stack.provisioning.v0.VirtualMachineNIC=} opt_value
 * @param {number=} opt_index
 * @return {!proto.n0stack.provisioning.v0.VirtualMachineNIC}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.addNics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.n0stack.provisioning.v0.VirtualMachineNIC, opt_index);
};


proto.n0stack.provisioning.v0.VirtualMachine.prototype.clearNicsList = function() {
  this.setNicsList([]);
};


/**
 * optional string uuid = 16;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string login_username = 17;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getLoginUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setLoginUsername = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * repeated string ssh_authorized_keys = 18;
 * @return {!Array<string>}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getSshAuthorizedKeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/** @param {!Array<string>} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setSshAuthorizedKeysList = function(value) {
  jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.addSshAuthorizedKeys = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


proto.n0stack.provisioning.v0.VirtualMachine.prototype.clearSshAuthorizedKeysList = function() {
  this.setSshAuthorizedKeysList([]);
};


/**
 * optional VirtualMachineState state = 50;
 * @return {!proto.n0stack.provisioning.v0.VirtualMachine.VirtualMachineState}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getState = function() {
  return /** @type {!proto.n0stack.provisioning.v0.VirtualMachine.VirtualMachineState} */ (jspb.Message.getFieldWithDefault(this, 50, 0));
};


/** @param {!proto.n0stack.provisioning.v0.VirtualMachine.VirtualMachineState} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 50, value);
};


/**
 * optional string compute_node_name = 52;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getComputeNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setComputeNodeName = function(value) {
  jspb.Message.setProto3StringField(this, 52, value);
};


/**
 * optional string compute_name = 53;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getComputeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 53, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setComputeName = function(value) {
  jspb.Message.setProto3StringField(this, 53, value);
};


/**
 * repeated string network_interface_names = 54;
 * @return {!Array<string>}
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.getNetworkInterfaceNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 54));
};


/** @param {!Array<string>} value */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.setNetworkInterfaceNamesList = function(value) {
  jspb.Message.setField(this, 54, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.n0stack.provisioning.v0.VirtualMachine.prototype.addNetworkInterfaceNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 54, value, opt_index);
};


proto.n0stack.provisioning.v0.VirtualMachine.prototype.clearNetworkInterfaceNamesList = function() {
  this.setNetworkInterfaceNamesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.repeatedFields_, null);
};
goog.inherits(proto.n0stack.provisioning.v0.CreateVirtualMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.displayName = 'proto.n0stack.provisioning.v0.CreateVirtualMachineRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.repeatedFields_ = [14,15,18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.CreateVirtualMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    requestCpuMilliCore: jspb.Message.getFieldWithDefault(msg, 10, 0),
    limitCpuMilliCore: jspb.Message.getFieldWithDefault(msg, 11, 0),
    requestMemoryBytes: jspb.Message.getFieldWithDefault(msg, 12, 0),
    limitMemoryBytes: jspb.Message.getFieldWithDefault(msg, 13, 0),
    blockStorageNamesList: jspb.Message.getRepeatedField(msg, 14),
    nicsList: jspb.Message.toObjectList(msg.getNicsList(),
    proto.n0stack.provisioning.v0.VirtualMachineNIC.toObject, includeInstance),
    uuid: jspb.Message.getFieldWithDefault(msg, 16, ""),
    loginUsername: jspb.Message.getFieldWithDefault(msg, 17, ""),
    sshAuthorizedKeysList: jspb.Message.getRepeatedField(msg, 18)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.CreateVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.CreateVirtualMachineRequest;
  return proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.CreateVirtualMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.CreateVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 4:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequestCpuMilliCore(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimitCpuMilliCore(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestMemoryBytes(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimitMemoryBytes(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addBlockStorageNames(value);
      break;
    case 15:
      var value = new proto.n0stack.provisioning.v0.VirtualMachineNIC;
      reader.readMessage(value,proto.n0stack.provisioning.v0.VirtualMachineNIC.deserializeBinaryFromReader);
      msg.addNics(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginUsername(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addSshAuthorizedKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.CreateVirtualMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRequestCpuMilliCore();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getLimitCpuMilliCore();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getRequestMemoryBytes();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getLimitMemoryBytes();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getBlockStorageNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getNicsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.n0stack.provisioning.v0.VirtualMachineNIC.serializeBinaryToWriter
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getLoginUsername();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getSshAuthorizedKeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> annotations = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


/**
 * map<string, string> labels = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
};


/**
 * optional uint32 request_cpu_milli_core = 10;
 * @return {number}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.getRequestCpuMilliCore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.setRequestCpuMilliCore = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 limit_cpu_milli_core = 11;
 * @return {number}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.getLimitCpuMilliCore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.setLimitCpuMilliCore = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 request_memory_bytes = 12;
 * @return {number}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.getRequestMemoryBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.setRequestMemoryBytes = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint64 limit_memory_bytes = 13;
 * @return {number}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.getLimitMemoryBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.setLimitMemoryBytes = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * repeated string block_storage_names = 14;
 * @return {!Array<string>}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.getBlockStorageNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/** @param {!Array<string>} value */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.setBlockStorageNamesList = function(value) {
  jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.addBlockStorageNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.clearBlockStorageNamesList = function() {
  this.setBlockStorageNamesList([]);
};


/**
 * repeated VirtualMachineNIC nics = 15;
 * @return {!Array<!proto.n0stack.provisioning.v0.VirtualMachineNIC>}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.getNicsList = function() {
  return /** @type{!Array<!proto.n0stack.provisioning.v0.VirtualMachineNIC>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.n0stack.provisioning.v0.VirtualMachineNIC, 15));
};


/** @param {!Array<!proto.n0stack.provisioning.v0.VirtualMachineNIC>} value */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.setNicsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.n0stack.provisioning.v0.VirtualMachineNIC=} opt_value
 * @param {number=} opt_index
 * @return {!proto.n0stack.provisioning.v0.VirtualMachineNIC}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.addNics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.n0stack.provisioning.v0.VirtualMachineNIC, opt_index);
};


proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.clearNicsList = function() {
  this.setNicsList([]);
};


/**
 * optional string uuid = 16;
 * @return {string}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string login_username = 17;
 * @return {string}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.getLoginUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.setLoginUsername = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * repeated string ssh_authorized_keys = 18;
 * @return {!Array<string>}
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.getSshAuthorizedKeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/** @param {!Array<string>} value */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.setSshAuthorizedKeysList = function(value) {
  jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.addSshAuthorizedKeys = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


proto.n0stack.provisioning.v0.CreateVirtualMachineRequest.prototype.clearSshAuthorizedKeysList = function() {
  this.setSshAuthorizedKeysList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.ListVirtualMachinesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.ListVirtualMachinesRequest.displayName = 'proto.n0stack.provisioning.v0.ListVirtualMachinesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.ListVirtualMachinesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.ListVirtualMachinesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.ListVirtualMachinesRequest}
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.ListVirtualMachinesRequest;
  return proto.n0stack.provisioning.v0.ListVirtualMachinesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.ListVirtualMachinesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.ListVirtualMachinesRequest}
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.ListVirtualMachinesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.ListVirtualMachinesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.repeatedFields_, null);
};
goog.inherits(proto.n0stack.provisioning.v0.ListVirtualMachinesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.displayName = 'proto.n0stack.provisioning.v0.ListVirtualMachinesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.ListVirtualMachinesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualMachinesList: jspb.Message.toObjectList(msg.getVirtualMachinesList(),
    proto.n0stack.provisioning.v0.VirtualMachine.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.ListVirtualMachinesResponse}
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.ListVirtualMachinesResponse;
  return proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.ListVirtualMachinesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.ListVirtualMachinesResponse}
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.n0stack.provisioning.v0.VirtualMachine;
      reader.readMessage(value,proto.n0stack.provisioning.v0.VirtualMachine.deserializeBinaryFromReader);
      msg.addVirtualMachines(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.ListVirtualMachinesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualMachinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.n0stack.provisioning.v0.VirtualMachine.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VirtualMachine virtual_machines = 1;
 * @return {!Array<!proto.n0stack.provisioning.v0.VirtualMachine>}
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.prototype.getVirtualMachinesList = function() {
  return /** @type{!Array<!proto.n0stack.provisioning.v0.VirtualMachine>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.n0stack.provisioning.v0.VirtualMachine, 1));
};


/** @param {!Array<!proto.n0stack.provisioning.v0.VirtualMachine>} value */
proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.prototype.setVirtualMachinesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.n0stack.provisioning.v0.VirtualMachine=} opt_value
 * @param {number=} opt_index
 * @return {!proto.n0stack.provisioning.v0.VirtualMachine}
 */
proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.prototype.addVirtualMachines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.n0stack.provisioning.v0.VirtualMachine, opt_index);
};


proto.n0stack.provisioning.v0.ListVirtualMachinesResponse.prototype.clearVirtualMachinesList = function() {
  this.setVirtualMachinesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.GetVirtualMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.GetVirtualMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.GetVirtualMachineRequest.displayName = 'proto.n0stack.provisioning.v0.GetVirtualMachineRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.GetVirtualMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.GetVirtualMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.GetVirtualMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.GetVirtualMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.GetVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.GetVirtualMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.GetVirtualMachineRequest;
  return proto.n0stack.provisioning.v0.GetVirtualMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.GetVirtualMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.GetVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.GetVirtualMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.GetVirtualMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.GetVirtualMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.GetVirtualMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.GetVirtualMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.GetVirtualMachineRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.GetVirtualMachineRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.repeatedFields_, null);
};
goog.inherits(proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.displayName = 'proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.repeatedFields_ = [14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    requestCpuMilliCore: jspb.Message.getFieldWithDefault(msg, 10, 0),
    requestMemoryBytes: jspb.Message.getFieldWithDefault(msg, 12, 0),
    blockStorageNamesList: jspb.Message.getRepeatedField(msg, 14)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest;
  return proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 4:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequestCpuMilliCore(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestMemoryBytes(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addBlockStorageNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRequestCpuMilliCore();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getRequestMemoryBytes();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getBlockStorageNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> annotations = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


/**
 * map<string, string> labels = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
};


/**
 * optional uint32 request_cpu_milli_core = 10;
 * @return {number}
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.getRequestCpuMilliCore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.setRequestCpuMilliCore = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 request_memory_bytes = 12;
 * @return {number}
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.getRequestMemoryBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.setRequestMemoryBytes = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * repeated string block_storage_names = 14;
 * @return {!Array<string>}
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.getBlockStorageNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/** @param {!Array<string>} value */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.setBlockStorageNamesList = function(value) {
  jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.addBlockStorageNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


proto.n0stack.provisioning.v0.UpdateVirtualMachineRequest.prototype.clearBlockStorageNamesList = function() {
  this.setBlockStorageNamesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest.displayName = 'proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest;
  return proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.DeleteVirtualMachineRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.BootVirtualMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.BootVirtualMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.BootVirtualMachineRequest.displayName = 'proto.n0stack.provisioning.v0.BootVirtualMachineRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.BootVirtualMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.BootVirtualMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.BootVirtualMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.BootVirtualMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.BootVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.BootVirtualMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.BootVirtualMachineRequest;
  return proto.n0stack.provisioning.v0.BootVirtualMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.BootVirtualMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.BootVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.BootVirtualMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.BootVirtualMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.BootVirtualMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.BootVirtualMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.BootVirtualMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.BootVirtualMachineRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.BootVirtualMachineRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.RebootVirtualMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.RebootVirtualMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.displayName = 'proto.n0stack.provisioning.v0.RebootVirtualMachineRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.RebootVirtualMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hard: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.RebootVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.RebootVirtualMachineRequest;
  return proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.RebootVirtualMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.RebootVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.RebootVirtualMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHard();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool hard = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.prototype.getHard = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.n0stack.provisioning.v0.RebootVirtualMachineRequest.prototype.setHard = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.displayName = 'proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hard: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest;
  return proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHard();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool hard = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.prototype.getHard = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.n0stack.provisioning.v0.ShutdownVirtualMachineRequest.prototype.setHard = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.SaveVirtualMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.SaveVirtualMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.SaveVirtualMachineRequest.displayName = 'proto.n0stack.provisioning.v0.SaveVirtualMachineRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.SaveVirtualMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.SaveVirtualMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.SaveVirtualMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.SaveVirtualMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.SaveVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.SaveVirtualMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.SaveVirtualMachineRequest;
  return proto.n0stack.provisioning.v0.SaveVirtualMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.SaveVirtualMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.SaveVirtualMachineRequest}
 */
proto.n0stack.provisioning.v0.SaveVirtualMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.SaveVirtualMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.SaveVirtualMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.SaveVirtualMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.SaveVirtualMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.SaveVirtualMachineRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.SaveVirtualMachineRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.OpenConsoleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.OpenConsoleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.OpenConsoleRequest.displayName = 'proto.n0stack.provisioning.v0.OpenConsoleRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.OpenConsoleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.OpenConsoleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.OpenConsoleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.OpenConsoleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.OpenConsoleRequest}
 */
proto.n0stack.provisioning.v0.OpenConsoleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.OpenConsoleRequest;
  return proto.n0stack.provisioning.v0.OpenConsoleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.OpenConsoleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.OpenConsoleRequest}
 */
proto.n0stack.provisioning.v0.OpenConsoleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.OpenConsoleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.OpenConsoleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.OpenConsoleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.OpenConsoleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.OpenConsoleRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.OpenConsoleRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.OpenConsoleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.OpenConsoleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.OpenConsoleResponse.displayName = 'proto.n0stack.provisioning.v0.OpenConsoleResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.OpenConsoleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.OpenConsoleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.OpenConsoleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.OpenConsoleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    consoleUrl: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.OpenConsoleResponse}
 */
proto.n0stack.provisioning.v0.OpenConsoleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.OpenConsoleResponse;
  return proto.n0stack.provisioning.v0.OpenConsoleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.OpenConsoleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.OpenConsoleResponse}
 */
proto.n0stack.provisioning.v0.OpenConsoleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsoleUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.OpenConsoleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.OpenConsoleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.OpenConsoleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.OpenConsoleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsoleUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string console_url = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.OpenConsoleResponse.prototype.getConsoleUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.OpenConsoleResponse.prototype.setConsoleUrl = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.n0stack.provisioning.v0);
