/* eslint-disable */
//@ts-nocheck
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var protoc$gen$swagger_options_annotations_pb = require('./protoc-gen-swagger/options/annotations_pb.js');
goog.exportSymbol('proto.n0stack.provisioning.v0.ApplyVirtualIPRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.ConnectNetworkRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.CreateVirtualRouterRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.DeleteVirtualIPRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.DisconnectNetworkRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.GetVirtualRouterRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.ListVirtualRoutersRequest', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.ListVirtualRoutersResponse', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.VirtualIPTarget', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.VirtualRouter', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork', null, global);
goog.exportSymbol('proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterState', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.VirtualIPTarget = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.VirtualIPTarget, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.VirtualIPTarget.displayName = 'proto.n0stack.provisioning.v0.VirtualIPTarget';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.VirtualIPTarget.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.VirtualIPTarget.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.VirtualIPTarget} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.VirtualIPTarget.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    networkInterfaceName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.VirtualIPTarget}
 */
proto.n0stack.provisioning.v0.VirtualIPTarget.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.VirtualIPTarget;
  return proto.n0stack.provisioning.v0.VirtualIPTarget.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.VirtualIPTarget} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.VirtualIPTarget}
 */
proto.n0stack.provisioning.v0.VirtualIPTarget.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkInterfaceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.VirtualIPTarget.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.VirtualIPTarget.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.VirtualIPTarget} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.VirtualIPTarget.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNetworkInterfaceName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string network_name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualIPTarget.prototype.getNetworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualIPTarget.prototype.setNetworkName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string network_interface_name = 2;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualIPTarget.prototype.getNetworkInterfaceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualIPTarget.prototype.setNetworkInterfaceName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.VirtualRouter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.provisioning.v0.VirtualRouter.repeatedFields_, null);
};
goog.inherits(proto.n0stack.provisioning.v0.VirtualRouter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.VirtualRouter.displayName = 'proto.n0stack.provisioning.v0.VirtualRouter';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.provisioning.v0.VirtualRouter.repeatedFields_ = [51];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.VirtualRouter.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.VirtualRouter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.VirtualRouter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.VirtualRouter.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    state: jspb.Message.getFieldWithDefault(msg, 50, 0),
    connectedNetworkList: jspb.Message.toObjectList(msg.getConnectedNetworkList(),
    proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.toObject, includeInstance),
    virtualIpMap: (f = msg.getVirtualIpMap()) ? f.toObject(includeInstance, proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.VirtualRouter}
 */
proto.n0stack.provisioning.v0.VirtualRouter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.VirtualRouter;
  return proto.n0stack.provisioning.v0.VirtualRouter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.VirtualRouter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.VirtualRouter}
 */
proto.n0stack.provisioning.v0.VirtualRouter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 4:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 50:
      var value = /** @type {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 51:
      var value = new proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork;
      reader.readMessage(value,proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.deserializeBinaryFromReader);
      msg.addConnectedNetwork(value);
      break;
    case 52:
      var value = msg.getVirtualIpMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.VirtualRouter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.VirtualRouter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.VirtualRouter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.VirtualRouter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      50,
      f
    );
  }
  f = message.getConnectedNetworkList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      51,
      f,
      proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.serializeBinaryToWriter
    );
  }
  f = message.getVirtualIpMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(52, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.serializeBinaryToWriter);
  }
};


/**
 * @enum {number}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterState = {
  VIRTUAL_ROUTER_UNSPECIFIED: 0,
  UNKNOWN: 1,
  PENDING: 2,
  AVAILABLE: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.displayName = 'proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    networkInterfaceName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork;
  return proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkInterfaceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNetworkInterfaceName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string network_name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.prototype.getNetworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.prototype.setNetworkName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string network_interface_name = 2;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.prototype.getNetworkInterfaceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork.prototype.setNetworkInterfaceName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.repeatedFields_, null);
};
goog.inherits(proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.displayName = 'proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    networkInterfaceName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    targetsList: jspb.Message.toObjectList(msg.getTargetsList(),
    proto.n0stack.provisioning.v0.VirtualIPTarget.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP;
  return proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkInterfaceName(value);
      break;
    case 3:
      var value = new proto.n0stack.provisioning.v0.VirtualIPTarget;
      reader.readMessage(value,proto.n0stack.provisioning.v0.VirtualIPTarget.deserializeBinaryFromReader);
      msg.addTargets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNetworkInterfaceName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTargetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.n0stack.provisioning.v0.VirtualIPTarget.serializeBinaryToWriter
    );
  }
};


/**
 * optional string network_name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.prototype.getNetworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.prototype.setNetworkName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string network_interface_name = 2;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.prototype.getNetworkInterfaceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.prototype.setNetworkInterfaceName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated VirtualIPTarget targets = 3;
 * @return {!Array<!proto.n0stack.provisioning.v0.VirtualIPTarget>}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.prototype.getTargetsList = function() {
  return /** @type{!Array<!proto.n0stack.provisioning.v0.VirtualIPTarget>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.n0stack.provisioning.v0.VirtualIPTarget, 3));
};


/** @param {!Array<!proto.n0stack.provisioning.v0.VirtualIPTarget>} value */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.prototype.setTargetsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.n0stack.provisioning.v0.VirtualIPTarget=} opt_value
 * @param {number=} opt_index
 * @return {!proto.n0stack.provisioning.v0.VirtualIPTarget}
 */
proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.prototype.addTargets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.n0stack.provisioning.v0.VirtualIPTarget, opt_index);
};


proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP.prototype.clearTargetsList = function() {
  this.setTargetsList([]);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.VirtualRouter.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.VirtualRouter.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> annotations = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.VirtualRouter.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.VirtualRouter.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


/**
 * map<string, string> labels = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.VirtualRouter.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.VirtualRouter.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
};


/**
 * optional VirtualRouterState state = 50;
 * @return {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterState}
 */
proto.n0stack.provisioning.v0.VirtualRouter.prototype.getState = function() {
  return /** @type {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterState} */ (jspb.Message.getFieldWithDefault(this, 50, 0));
};


/** @param {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterState} value */
proto.n0stack.provisioning.v0.VirtualRouter.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 50, value);
};


/**
 * repeated VirtualRouterConnectedNetwork connected_network = 51;
 * @return {!Array<!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork>}
 */
proto.n0stack.provisioning.v0.VirtualRouter.prototype.getConnectedNetworkList = function() {
  return /** @type{!Array<!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork, 51));
};


/** @param {!Array<!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork>} value */
proto.n0stack.provisioning.v0.VirtualRouter.prototype.setConnectedNetworkList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 51, value);
};


/**
 * @param {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork=} opt_value
 * @param {number=} opt_index
 * @return {!proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork}
 */
proto.n0stack.provisioning.v0.VirtualRouter.prototype.addConnectedNetwork = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 51, opt_value, proto.n0stack.provisioning.v0.VirtualRouter.VirtualRouterConnectedNetwork, opt_index);
};


proto.n0stack.provisioning.v0.VirtualRouter.prototype.clearConnectedNetworkList = function() {
  this.setConnectedNetworkList([]);
};


/**
 * map<string, VirtualIP> virtual_ip = 52;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP>}
 */
proto.n0stack.provisioning.v0.VirtualRouter.prototype.getVirtualIpMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP>} */ (
      jspb.Message.getMapField(this, 52, opt_noLazyCreate,
      proto.n0stack.provisioning.v0.VirtualRouter.VirtualIP));
};


proto.n0stack.provisioning.v0.VirtualRouter.prototype.clearVirtualIpMap = function() {
  this.getVirtualIpMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.CreateVirtualRouterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.CreateVirtualRouterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.displayName = 'proto.n0stack.provisioning.v0.CreateVirtualRouterRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.CreateVirtualRouterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.CreateVirtualRouterRequest}
 */
proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.CreateVirtualRouterRequest;
  return proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.CreateVirtualRouterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.CreateVirtualRouterRequest}
 */
proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 4:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.CreateVirtualRouterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> annotations = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


/**
 * map<string, string> labels = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.CreateVirtualRouterRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.ListVirtualRoutersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.ListVirtualRoutersRequest.displayName = 'proto.n0stack.provisioning.v0.ListVirtualRoutersRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.ListVirtualRoutersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.ListVirtualRoutersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.ListVirtualRoutersRequest}
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.ListVirtualRoutersRequest;
  return proto.n0stack.provisioning.v0.ListVirtualRoutersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.ListVirtualRoutersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.ListVirtualRoutersRequest}
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.ListVirtualRoutersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.ListVirtualRoutersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.repeatedFields_, null);
};
goog.inherits(proto.n0stack.provisioning.v0.ListVirtualRoutersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.displayName = 'proto.n0stack.provisioning.v0.ListVirtualRoutersResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.ListVirtualRoutersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualRoutersList: jspb.Message.toObjectList(msg.getVirtualRoutersList(),
    proto.n0stack.provisioning.v0.VirtualRouter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.ListVirtualRoutersResponse}
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.ListVirtualRoutersResponse;
  return proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.ListVirtualRoutersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.ListVirtualRoutersResponse}
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.n0stack.provisioning.v0.VirtualRouter;
      reader.readMessage(value,proto.n0stack.provisioning.v0.VirtualRouter.deserializeBinaryFromReader);
      msg.addVirtualRouters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.ListVirtualRoutersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualRoutersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.n0stack.provisioning.v0.VirtualRouter.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VirtualRouter virtual_routers = 1;
 * @return {!Array<!proto.n0stack.provisioning.v0.VirtualRouter>}
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.prototype.getVirtualRoutersList = function() {
  return /** @type{!Array<!proto.n0stack.provisioning.v0.VirtualRouter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.n0stack.provisioning.v0.VirtualRouter, 1));
};


/** @param {!Array<!proto.n0stack.provisioning.v0.VirtualRouter>} value */
proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.prototype.setVirtualRoutersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.n0stack.provisioning.v0.VirtualRouter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.n0stack.provisioning.v0.VirtualRouter}
 */
proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.prototype.addVirtualRouters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.n0stack.provisioning.v0.VirtualRouter, opt_index);
};


proto.n0stack.provisioning.v0.ListVirtualRoutersResponse.prototype.clearVirtualRoutersList = function() {
  this.setVirtualRoutersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.GetVirtualRouterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.GetVirtualRouterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.GetVirtualRouterRequest.displayName = 'proto.n0stack.provisioning.v0.GetVirtualRouterRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.GetVirtualRouterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.GetVirtualRouterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.GetVirtualRouterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.GetVirtualRouterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.GetVirtualRouterRequest}
 */
proto.n0stack.provisioning.v0.GetVirtualRouterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.GetVirtualRouterRequest;
  return proto.n0stack.provisioning.v0.GetVirtualRouterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.GetVirtualRouterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.GetVirtualRouterRequest}
 */
proto.n0stack.provisioning.v0.GetVirtualRouterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.GetVirtualRouterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.GetVirtualRouterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.GetVirtualRouterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.GetVirtualRouterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.GetVirtualRouterRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.GetVirtualRouterRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest.displayName = 'proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest}
 */
proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest;
  return proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest}
 */
proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.DeleteVirtualRouterRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.ConnectNetworkRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.ConnectNetworkRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.ConnectNetworkRequest.displayName = 'proto.n0stack.provisioning.v0.ConnectNetworkRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.ConnectNetworkRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.ConnectNetworkRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualRouterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    networkName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    ipv4Address: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ipv6Address: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.ConnectNetworkRequest}
 */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.ConnectNetworkRequest;
  return proto.n0stack.provisioning.v0.ConnectNetworkRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.ConnectNetworkRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.ConnectNetworkRequest}
 */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVirtualRouterName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkName(value);
      break;
    case 3:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpv4Address(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpv6Address(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.ConnectNetworkRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.ConnectNetworkRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualRouterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNetworkName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getIpv4Address();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIpv6Address();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string virtual_router_name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.prototype.getVirtualRouterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.prototype.setVirtualRouterName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string network_name = 2;
 * @return {string}
 */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.prototype.getNetworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.prototype.setNetworkName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> annotations = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.ConnectNetworkRequest.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


/**
 * optional string ipv4_address = 4;
 * @return {string}
 */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.prototype.getIpv4Address = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.prototype.setIpv4Address = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ipv6_address = 5;
 * @return {string}
 */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.prototype.getIpv6Address = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.ConnectNetworkRequest.prototype.setIpv6Address = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.DisconnectNetworkRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.DisconnectNetworkRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.DisconnectNetworkRequest.displayName = 'proto.n0stack.provisioning.v0.DisconnectNetworkRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.DisconnectNetworkRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.DisconnectNetworkRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.DisconnectNetworkRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.DisconnectNetworkRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualRouterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    networkName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.DisconnectNetworkRequest}
 */
proto.n0stack.provisioning.v0.DisconnectNetworkRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.DisconnectNetworkRequest;
  return proto.n0stack.provisioning.v0.DisconnectNetworkRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.DisconnectNetworkRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.DisconnectNetworkRequest}
 */
proto.n0stack.provisioning.v0.DisconnectNetworkRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVirtualRouterName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.DisconnectNetworkRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.DisconnectNetworkRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.DisconnectNetworkRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.DisconnectNetworkRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualRouterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNetworkName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string virtual_router_name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.DisconnectNetworkRequest.prototype.getVirtualRouterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.DisconnectNetworkRequest.prototype.setVirtualRouterName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string network_name = 2;
 * @return {string}
 */
proto.n0stack.provisioning.v0.DisconnectNetworkRequest.prototype.getNetworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.DisconnectNetworkRequest.prototype.setNetworkName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.repeatedFields_, null);
};
goog.inherits(proto.n0stack.provisioning.v0.ApplyVirtualIPRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.displayName = 'proto.n0stack.provisioning.v0.ApplyVirtualIPRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.ApplyVirtualIPRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualRouterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    virtualIpName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    networkName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    ipv4Address: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ipv6Address: jspb.Message.getFieldWithDefault(msg, 6, ""),
    targetsList: jspb.Message.toObjectList(msg.getTargetsList(),
    proto.n0stack.provisioning.v0.VirtualIPTarget.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.ApplyVirtualIPRequest}
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.ApplyVirtualIPRequest;
  return proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.ApplyVirtualIPRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.ApplyVirtualIPRequest}
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVirtualRouterName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVirtualIpName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkName(value);
      break;
    case 4:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpv4Address(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpv6Address(value);
      break;
    case 7:
      var value = new proto.n0stack.provisioning.v0.VirtualIPTarget;
      reader.readMessage(value,proto.n0stack.provisioning.v0.VirtualIPTarget.deserializeBinaryFromReader);
      msg.addTargets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.ApplyVirtualIPRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualRouterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVirtualIpName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNetworkName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getIpv4Address();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIpv6Address();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTargetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.n0stack.provisioning.v0.VirtualIPTarget.serializeBinaryToWriter
    );
  }
};


/**
 * optional string virtual_router_name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.getVirtualRouterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.setVirtualRouterName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string virtual_ip_name = 2;
 * @return {string}
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.getVirtualIpName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.setVirtualIpName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string network_name = 3;
 * @return {string}
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.getNetworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.setNetworkName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> annotations = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


/**
 * optional string ipv4_address = 5;
 * @return {string}
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.getIpv4Address = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.setIpv4Address = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string ipv6_address = 6;
 * @return {string}
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.getIpv6Address = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.setIpv6Address = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated VirtualIPTarget targets = 7;
 * @return {!Array<!proto.n0stack.provisioning.v0.VirtualIPTarget>}
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.getTargetsList = function() {
  return /** @type{!Array<!proto.n0stack.provisioning.v0.VirtualIPTarget>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.n0stack.provisioning.v0.VirtualIPTarget, 7));
};


/** @param {!Array<!proto.n0stack.provisioning.v0.VirtualIPTarget>} value */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.setTargetsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.n0stack.provisioning.v0.VirtualIPTarget=} opt_value
 * @param {number=} opt_index
 * @return {!proto.n0stack.provisioning.v0.VirtualIPTarget}
 */
proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.addTargets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.n0stack.provisioning.v0.VirtualIPTarget, opt_index);
};


proto.n0stack.provisioning.v0.ApplyVirtualIPRequest.prototype.clearTargetsList = function() {
  this.setTargetsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.provisioning.v0.DeleteVirtualIPRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.provisioning.v0.DeleteVirtualIPRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.displayName = 'proto.n0stack.provisioning.v0.DeleteVirtualIPRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.provisioning.v0.DeleteVirtualIPRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualRouterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    virtualIpName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.provisioning.v0.DeleteVirtualIPRequest}
 */
proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.provisioning.v0.DeleteVirtualIPRequest;
  return proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.provisioning.v0.DeleteVirtualIPRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.provisioning.v0.DeleteVirtualIPRequest}
 */
proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVirtualRouterName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVirtualIpName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.provisioning.v0.DeleteVirtualIPRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualRouterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVirtualIpName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string virtual_router_name = 1;
 * @return {string}
 */
proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.prototype.getVirtualRouterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.prototype.setVirtualRouterName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string virtual_ip_name = 2;
 * @return {string}
 */
proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.prototype.getVirtualIpName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.provisioning.v0.DeleteVirtualIPRequest.prototype.setVirtualIpName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.n0stack.provisioning.v0);
