/* eslint-disable */
//@ts-nocheck
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

//var google_api_annotations_pb = require('./google/api/annotations_pb.js');
//var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
//var n0stack_provisioning_v0_block_storage_pb = require('./n0stack/provisioning/v0/block_storage_pb.js');
//var protoc$gen$swagger_options_annotations_pb = require('./protoc-gen-swagger/options/annotations_pb.js');
goog.exportSymbol('proto.n0stack.deployment.v0.ApplyImageRequest', null, global);
goog.exportSymbol('proto.n0stack.deployment.v0.DeleteImageRequest', null, global);
goog.exportSymbol('proto.n0stack.deployment.v0.GenerateBlockStorageRequest', null, global);
goog.exportSymbol('proto.n0stack.deployment.v0.GetImageRequest', null, global);
goog.exportSymbol('proto.n0stack.deployment.v0.Image', null, global);
goog.exportSymbol('proto.n0stack.deployment.v0.Image.RegisteredBlockStorage', null, global);
goog.exportSymbol('proto.n0stack.deployment.v0.ListImagesRequest', null, global);
goog.exportSymbol('proto.n0stack.deployment.v0.ListImagesResponse', null, global);
goog.exportSymbol('proto.n0stack.deployment.v0.RegisterBlockStorageRequest', null, global);
goog.exportSymbol('proto.n0stack.deployment.v0.TagImageRequest', null, global);
goog.exportSymbol('proto.n0stack.deployment.v0.UnregisterBlockStorageRequest', null, global);
goog.exportSymbol('proto.n0stack.deployment.v0.UntagImageRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.deployment.v0.Image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.deployment.v0.Image.repeatedFields_, null);
};
goog.inherits(proto.n0stack.deployment.v0.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.deployment.v0.Image.displayName = 'proto.n0stack.deployment.v0.Image';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.deployment.v0.Image.repeatedFields_ = [50];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.deployment.v0.Image.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.deployment.v0.Image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.deployment.v0.Image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.Image.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    registeredBlockStoragesList: jspb.Message.toObjectList(msg.getRegisteredBlockStoragesList(),
    proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.toObject, includeInstance),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.deployment.v0.Image}
 */
proto.n0stack.deployment.v0.Image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.deployment.v0.Image;
  return proto.n0stack.deployment.v0.Image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.deployment.v0.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.deployment.v0.Image}
 */
proto.n0stack.deployment.v0.Image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 4:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 50:
      var value = new proto.n0stack.deployment.v0.Image.RegisteredBlockStorage;
      reader.readMessage(value,proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.deserializeBinaryFromReader);
      msg.addRegisteredBlockStorages(value);
      break;
    case 51:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.deployment.v0.Image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.deployment.v0.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.deployment.v0.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.Image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRegisteredBlockStoragesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      50,
      f,
      proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.serializeBinaryToWriter
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(51, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.deployment.v0.Image.RegisteredBlockStorage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.deployment.v0.Image.RegisteredBlockStorage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.displayName = 'proto.n0stack.deployment.v0.Image.RegisteredBlockStorage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.deployment.v0.Image.RegisteredBlockStorage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockStorageName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    registeredAt: (f = msg.getRegisteredAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.deployment.v0.Image.RegisteredBlockStorage}
 */
proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.deployment.v0.Image.RegisteredBlockStorage;
  return proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.deployment.v0.Image.RegisteredBlockStorage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.deployment.v0.Image.RegisteredBlockStorage}
 */
proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockStorageName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRegisteredAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.deployment.v0.Image.RegisteredBlockStorage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockStorageName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegisteredAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string block_storage_name = 1;
 * @return {string}
 */
proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.prototype.getBlockStorageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.prototype.setBlockStorageName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp registered_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.prototype.getRegisteredAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.prototype.setRegisteredAt = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.prototype.clearRegisteredAt = function() {
  this.setRegisteredAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.n0stack.deployment.v0.Image.RegisteredBlockStorage.prototype.hasRegisteredAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.deployment.v0.Image.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.Image.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> annotations = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.deployment.v0.Image.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.n0stack.deployment.v0.Image.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


/**
 * map<string, string> labels = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.deployment.v0.Image.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.n0stack.deployment.v0.Image.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
};


/**
 * repeated RegisteredBlockStorage registered_block_storages = 50;
 * @return {!Array<!proto.n0stack.deployment.v0.Image.RegisteredBlockStorage>}
 */
proto.n0stack.deployment.v0.Image.prototype.getRegisteredBlockStoragesList = function() {
  return /** @type{!Array<!proto.n0stack.deployment.v0.Image.RegisteredBlockStorage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.n0stack.deployment.v0.Image.RegisteredBlockStorage, 50));
};


/** @param {!Array<!proto.n0stack.deployment.v0.Image.RegisteredBlockStorage>} value */
proto.n0stack.deployment.v0.Image.prototype.setRegisteredBlockStoragesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 50, value);
};


/**
 * @param {!proto.n0stack.deployment.v0.Image.RegisteredBlockStorage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.n0stack.deployment.v0.Image.RegisteredBlockStorage}
 */
proto.n0stack.deployment.v0.Image.prototype.addRegisteredBlockStorages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 50, opt_value, proto.n0stack.deployment.v0.Image.RegisteredBlockStorage, opt_index);
};


proto.n0stack.deployment.v0.Image.prototype.clearRegisteredBlockStoragesList = function() {
  this.setRegisteredBlockStoragesList([]);
};


/**
 * map<string, string> tags = 51;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.deployment.v0.Image.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 51, opt_noLazyCreate,
      null));
};


proto.n0stack.deployment.v0.Image.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.deployment.v0.ListImagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.deployment.v0.ListImagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.deployment.v0.ListImagesRequest.displayName = 'proto.n0stack.deployment.v0.ListImagesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.deployment.v0.ListImagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.deployment.v0.ListImagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.deployment.v0.ListImagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.ListImagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.deployment.v0.ListImagesRequest}
 */
proto.n0stack.deployment.v0.ListImagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.deployment.v0.ListImagesRequest;
  return proto.n0stack.deployment.v0.ListImagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.deployment.v0.ListImagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.deployment.v0.ListImagesRequest}
 */
proto.n0stack.deployment.v0.ListImagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.deployment.v0.ListImagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.deployment.v0.ListImagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.deployment.v0.ListImagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.ListImagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.deployment.v0.ListImagesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.deployment.v0.ListImagesResponse.repeatedFields_, null);
};
goog.inherits(proto.n0stack.deployment.v0.ListImagesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.deployment.v0.ListImagesResponse.displayName = 'proto.n0stack.deployment.v0.ListImagesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.deployment.v0.ListImagesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.deployment.v0.ListImagesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.deployment.v0.ListImagesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.deployment.v0.ListImagesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.ListImagesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    imagesList: jspb.Message.toObjectList(msg.getImagesList(),
    proto.n0stack.deployment.v0.Image.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.deployment.v0.ListImagesResponse}
 */
proto.n0stack.deployment.v0.ListImagesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.deployment.v0.ListImagesResponse;
  return proto.n0stack.deployment.v0.ListImagesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.deployment.v0.ListImagesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.deployment.v0.ListImagesResponse}
 */
proto.n0stack.deployment.v0.ListImagesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.n0stack.deployment.v0.Image;
      reader.readMessage(value,proto.n0stack.deployment.v0.Image.deserializeBinaryFromReader);
      msg.addImages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.deployment.v0.ListImagesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.deployment.v0.ListImagesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.deployment.v0.ListImagesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.ListImagesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.n0stack.deployment.v0.Image.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Image images = 1;
 * @return {!Array<!proto.n0stack.deployment.v0.Image>}
 */
proto.n0stack.deployment.v0.ListImagesResponse.prototype.getImagesList = function() {
  return /** @type{!Array<!proto.n0stack.deployment.v0.Image>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.n0stack.deployment.v0.Image, 1));
};


/** @param {!Array<!proto.n0stack.deployment.v0.Image>} value */
proto.n0stack.deployment.v0.ListImagesResponse.prototype.setImagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.n0stack.deployment.v0.Image=} opt_value
 * @param {number=} opt_index
 * @return {!proto.n0stack.deployment.v0.Image}
 */
proto.n0stack.deployment.v0.ListImagesResponse.prototype.addImages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.n0stack.deployment.v0.Image, opt_index);
};


proto.n0stack.deployment.v0.ListImagesResponse.prototype.clearImagesList = function() {
  this.setImagesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.deployment.v0.GetImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.deployment.v0.GetImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.deployment.v0.GetImageRequest.displayName = 'proto.n0stack.deployment.v0.GetImageRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.deployment.v0.GetImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.deployment.v0.GetImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.deployment.v0.GetImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.GetImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.deployment.v0.GetImageRequest}
 */
proto.n0stack.deployment.v0.GetImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.deployment.v0.GetImageRequest;
  return proto.n0stack.deployment.v0.GetImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.deployment.v0.GetImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.deployment.v0.GetImageRequest}
 */
proto.n0stack.deployment.v0.GetImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.deployment.v0.GetImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.deployment.v0.GetImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.deployment.v0.GetImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.GetImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.deployment.v0.GetImageRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.GetImageRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.deployment.v0.ApplyImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.deployment.v0.ApplyImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.deployment.v0.ApplyImageRequest.displayName = 'proto.n0stack.deployment.v0.ApplyImageRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.deployment.v0.ApplyImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.deployment.v0.ApplyImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.deployment.v0.ApplyImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.ApplyImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.deployment.v0.ApplyImageRequest}
 */
proto.n0stack.deployment.v0.ApplyImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.deployment.v0.ApplyImageRequest;
  return proto.n0stack.deployment.v0.ApplyImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.deployment.v0.ApplyImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.deployment.v0.ApplyImageRequest}
 */
proto.n0stack.deployment.v0.ApplyImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 4:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.deployment.v0.ApplyImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.deployment.v0.ApplyImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.deployment.v0.ApplyImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.ApplyImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.deployment.v0.ApplyImageRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.ApplyImageRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> annotations = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.deployment.v0.ApplyImageRequest.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.n0stack.deployment.v0.ApplyImageRequest.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


/**
 * map<string, string> labels = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.deployment.v0.ApplyImageRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.n0stack.deployment.v0.ApplyImageRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.deployment.v0.DeleteImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.deployment.v0.DeleteImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.deployment.v0.DeleteImageRequest.displayName = 'proto.n0stack.deployment.v0.DeleteImageRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.deployment.v0.DeleteImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.deployment.v0.DeleteImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.deployment.v0.DeleteImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.DeleteImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.deployment.v0.DeleteImageRequest}
 */
proto.n0stack.deployment.v0.DeleteImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.deployment.v0.DeleteImageRequest;
  return proto.n0stack.deployment.v0.DeleteImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.deployment.v0.DeleteImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.deployment.v0.DeleteImageRequest}
 */
proto.n0stack.deployment.v0.DeleteImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.deployment.v0.DeleteImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.deployment.v0.DeleteImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.deployment.v0.DeleteImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.DeleteImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.deployment.v0.DeleteImageRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.DeleteImageRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.deployment.v0.RegisterBlockStorageRequest.repeatedFields_, null);
};
goog.inherits(proto.n0stack.deployment.v0.RegisterBlockStorageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.deployment.v0.RegisterBlockStorageRequest.displayName = 'proto.n0stack.deployment.v0.RegisterBlockStorageRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.deployment.v0.RegisterBlockStorageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.deployment.v0.RegisterBlockStorageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockStorageName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.deployment.v0.RegisterBlockStorageRequest}
 */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.deployment.v0.RegisterBlockStorageRequest;
  return proto.n0stack.deployment.v0.RegisterBlockStorageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.deployment.v0.RegisterBlockStorageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.deployment.v0.RegisterBlockStorageRequest}
 */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockStorageName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.deployment.v0.RegisterBlockStorageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.deployment.v0.RegisterBlockStorageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockStorageName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string image_name = 1;
 * @return {string}
 */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.prototype.getImageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.prototype.setImageName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string block_storage_name = 2;
 * @return {string}
 */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.prototype.getBlockStorageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.prototype.setBlockStorageName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string tags = 3;
 * @return {!Array<string>}
 */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.n0stack.deployment.v0.RegisterBlockStorageRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.n0stack.deployment.v0.RegisterBlockStorageRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.deployment.v0.UnregisterBlockStorageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.deployment.v0.UnregisterBlockStorageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.displayName = 'proto.n0stack.deployment.v0.UnregisterBlockStorageRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.deployment.v0.UnregisterBlockStorageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockStorageName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.deployment.v0.UnregisterBlockStorageRequest}
 */
proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.deployment.v0.UnregisterBlockStorageRequest;
  return proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.deployment.v0.UnregisterBlockStorageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.deployment.v0.UnregisterBlockStorageRequest}
 */
proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockStorageName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.deployment.v0.UnregisterBlockStorageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockStorageName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string image_name = 1;
 * @return {string}
 */
proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.prototype.getImageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.prototype.setImageName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string block_storage_name = 2;
 * @return {string}
 */
proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.prototype.getBlockStorageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.UnregisterBlockStorageRequest.prototype.setBlockStorageName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.deployment.v0.GenerateBlockStorageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.deployment.v0.GenerateBlockStorageRequest.displayName = 'proto.n0stack.deployment.v0.GenerateBlockStorageRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.deployment.v0.GenerateBlockStorageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.deployment.v0.GenerateBlockStorageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockStorageName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    requestBytes: jspb.Message.getFieldWithDefault(msg, 4, 0),
    limitBytes: jspb.Message.getFieldWithDefault(msg, 5, 0),
    tag: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.deployment.v0.GenerateBlockStorageRequest}
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.deployment.v0.GenerateBlockStorageRequest;
  return proto.n0stack.deployment.v0.GenerateBlockStorageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.deployment.v0.GenerateBlockStorageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.deployment.v0.GenerateBlockStorageRequest}
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockStorageName(value);
      break;
    case 3:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestBytes(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimitBytes(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.deployment.v0.GenerateBlockStorageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.deployment.v0.GenerateBlockStorageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockStorageName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRequestBytes();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getLimitBytes();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string image_name = 1;
 * @return {string}
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.getImageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.setImageName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string block_storage_name = 2;
 * @return {string}
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.getBlockStorageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.setBlockStorageName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> annotations = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


/**
 * optional uint64 request_bytes = 4;
 * @return {number}
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.getRequestBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.setRequestBytes = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 limit_bytes = 5;
 * @return {number}
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.getLimitBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.setLimitBytes = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string tag = 6;
 * @return {string}
 */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.GenerateBlockStorageRequest.prototype.setTag = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.deployment.v0.TagImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.deployment.v0.TagImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.deployment.v0.TagImageRequest.displayName = 'proto.n0stack.deployment.v0.TagImageRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.deployment.v0.TagImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.deployment.v0.TagImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.deployment.v0.TagImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.TagImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tag: jspb.Message.getFieldWithDefault(msg, 2, ""),
    registeredBlockStorageName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.deployment.v0.TagImageRequest}
 */
proto.n0stack.deployment.v0.TagImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.deployment.v0.TagImageRequest;
  return proto.n0stack.deployment.v0.TagImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.deployment.v0.TagImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.deployment.v0.TagImageRequest}
 */
proto.n0stack.deployment.v0.TagImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegisteredBlockStorageName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.deployment.v0.TagImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.deployment.v0.TagImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.deployment.v0.TagImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.TagImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRegisteredBlockStorageName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.deployment.v0.TagImageRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.TagImageRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tag = 2;
 * @return {string}
 */
proto.n0stack.deployment.v0.TagImageRequest.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.TagImageRequest.prototype.setTag = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string registered_block_storage_name = 3;
 * @return {string}
 */
proto.n0stack.deployment.v0.TagImageRequest.prototype.getRegisteredBlockStorageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.TagImageRequest.prototype.setRegisteredBlockStorageName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.deployment.v0.UntagImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.deployment.v0.UntagImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.deployment.v0.UntagImageRequest.displayName = 'proto.n0stack.deployment.v0.UntagImageRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.deployment.v0.UntagImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.deployment.v0.UntagImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.deployment.v0.UntagImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.UntagImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tag: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.deployment.v0.UntagImageRequest}
 */
proto.n0stack.deployment.v0.UntagImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.deployment.v0.UntagImageRequest;
  return proto.n0stack.deployment.v0.UntagImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.deployment.v0.UntagImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.deployment.v0.UntagImageRequest}
 */
proto.n0stack.deployment.v0.UntagImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.deployment.v0.UntagImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.deployment.v0.UntagImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.deployment.v0.UntagImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.deployment.v0.UntagImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.deployment.v0.UntagImageRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.UntagImageRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tag = 2;
 * @return {string}
 */
proto.n0stack.deployment.v0.UntagImageRequest.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.deployment.v0.UntagImageRequest.prototype.setTag = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.n0stack.deployment.v0);
