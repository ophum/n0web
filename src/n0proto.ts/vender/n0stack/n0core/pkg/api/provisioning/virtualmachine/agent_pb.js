/* eslint-disable */
//@ts-nocheck
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.exportSymbol('proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev', null, global);
goog.exportSymbol('proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest', null, global);
goog.exportSymbol('proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse', null, global);
goog.exportSymbol('proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest', null, global);
goog.exportSymbol('proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev', null, global);
goog.exportSymbol('proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest', null, global);
goog.exportSymbol('proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse', null, global);
goog.exportSymbol('proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest', null, global);
goog.exportSymbol('proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse', null, global);
goog.exportSymbol('proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.displayName = 'proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bootIndex: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev;
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBootIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBootIndex();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 boot_index = 3;
 * @return {number}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.prototype.getBootIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.prototype.setBootIndex = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.repeatedFields_, null);
};
goog.inherits(proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.displayName = 'proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    networkName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hardwareAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ipv4AddressCidr: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ipv4Gateway: jspb.Message.getFieldWithDefault(msg, 5, ""),
    nameserversList: jspb.Message.getRepeatedField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev;
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHardwareAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpv4AddressCidr(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpv4Gateway(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addNameservers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNetworkName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHardwareAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIpv4AddressCidr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIpv4Gateway();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNameserversList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string network_name = 2;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.getNetworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.setNetworkName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string hardware_address = 3;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.getHardwareAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.setHardwareAddress = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ipv4_address_cidr = 4;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.getIpv4AddressCidr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.setIpv4AddressCidr = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ipv4_gateway = 5;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.getIpv4Gateway = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.setIpv4Gateway = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string nameservers = 6;
 * @return {!Array<string>}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.getNameserversList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.setNameserversList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.addNameservers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.prototype.clearNameserversList = function() {
  this.setNameserversList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.repeatedFields_, null);
};
goog.inherits(proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.displayName = 'proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.repeatedFields_ = [5,6,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vcpus: jspb.Message.getFieldWithDefault(msg, 3, 0),
    memoryBytes: jspb.Message.getFieldWithDefault(msg, 4, 0),
    blockdevsList: jspb.Message.toObjectList(msg.getBlockdevsList(),
    proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.toObject, includeInstance),
    netdevsList: jspb.Message.toObjectList(msg.getNetdevsList(),
    proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.toObject, includeInstance),
    loginUsername: jspb.Message.getFieldWithDefault(msg, 7, ""),
    sshAuthorizedKeysList: jspb.Message.getRepeatedField(msg, 8)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest;
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVcpus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMemoryBytes(value);
      break;
    case 5:
      var value = new proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev;
      reader.readMessage(value,proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.deserializeBinaryFromReader);
      msg.addBlockdevs(value);
      break;
    case 6:
      var value = new proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev;
      reader.readMessage(value,proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.deserializeBinaryFromReader);
      msg.addNetdevs(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginUsername(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addSshAuthorizedKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVcpus();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getMemoryBytes();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getBlockdevsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev.serializeBinaryToWriter
    );
  }
  f = message.getNetdevsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.serializeBinaryToWriter
    );
  }
  f = message.getLoginUsername();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSshAuthorizedKeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 vcpus = 3;
 * @return {number}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.getVcpus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.setVcpus = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 memory_bytes = 4;
 * @return {number}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.getMemoryBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.setMemoryBytes = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated BlockDev blockdevs = 5;
 * @return {!Array<!proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev>}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.getBlockdevsList = function() {
  return /** @type{!Array<!proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev, 5));
};


/** @param {!Array<!proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev>} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.setBlockdevsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev=} opt_value
 * @param {number=} opt_index
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.addBlockdevs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.n0stack.internal.n0core.provisioning.virtual_machine.BlockDev, opt_index);
};


proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.clearBlockdevsList = function() {
  this.setBlockdevsList([]);
};


/**
 * repeated NetDev netdevs = 6;
 * @return {!Array<!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev>}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.getNetdevsList = function() {
  return /** @type{!Array<!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev, 6));
};


/** @param {!Array<!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev>} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.setNetdevsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev=} opt_value
 * @param {number=} opt_index
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.addNetdevs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev, opt_index);
};


proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.clearNetdevsList = function() {
  this.setNetdevsList([]);
};


/**
 * optional string login_username = 7;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.getLoginUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.setLoginUsername = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string ssh_authorized_keys = 8;
 * @return {!Array<string>}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.getSshAuthorizedKeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<string>} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.setSshAuthorizedKeysList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.addSshAuthorizedKeys = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineRequest.prototype.clearSshAuthorizedKeysList = function() {
  this.setSshAuthorizedKeysList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.displayName = 'proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    websocketPort: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse;
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWebsocketPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getWebsocketPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional VirtualMachineState state = 1;
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.prototype.getState = function() {
  return /** @type {!proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 websocket_port = 2;
 * @return {number}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.prototype.getWebsocketPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.BootVirtualMachineResponse.prototype.setWebsocketPort = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.displayName = 'proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hard: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest;
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHard();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool hard = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.prototype.getHard = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineRequest.prototype.setHard = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse.displayName = 'proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse;
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional VirtualMachineState state = 1;
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse.prototype.getState = function() {
  return /** @type {!proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.RebootVirtualMachineResponse.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.displayName = 'proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hard: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest;
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHard();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool hard = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.prototype.getHard = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineRequest.prototype.setHard = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse.displayName = 'proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse;
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional VirtualMachineState state = 1;
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse.prototype.getState = function() {
  return /** @type {!proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.ShutdownVirtualMachineResponse.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.repeatedFields_, null);
};
goog.inherits(proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.displayName = 'proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    netdevsList: jspb.Message.toObjectList(msg.getNetdevsList(),
    proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest;
  return proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 8:
      var value = new proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev;
      reader.readMessage(value,proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.deserializeBinaryFromReader);
      msg.addNetdevs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNetdevsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated NetDev netdevs = 8;
 * @return {!Array<!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev>}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.prototype.getNetdevsList = function() {
  return /** @type{!Array<!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev, 8));
};


/** @param {!Array<!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev>} value */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.prototype.setNetdevsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev=} opt_value
 * @param {number=} opt_index
 * @return {!proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.prototype.addNetdevs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.n0stack.internal.n0core.provisioning.virtual_machine.NetDev, opt_index);
};


proto.n0stack.internal.n0core.provisioning.virtual_machine.DeleteVirtualMachineRequest.prototype.clearNetdevsList = function() {
  this.setNetdevsList([]);
};


/**
 * @enum {number}
 */
proto.n0stack.internal.n0core.provisioning.virtual_machine.VirtualMachineState = {
  FAILED: 0,
  UNKNOWN: 1,
  SHUTDOWN: 2,
  RUNNING: 3,
  PAUSED: 4
};

goog.object.extend(exports, proto.n0stack.internal.n0core.provisioning.virtual_machine);
